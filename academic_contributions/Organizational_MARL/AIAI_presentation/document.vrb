\frametitle{AOMEA approach}\framesubtitle {Engineering tool}


    PettingZoo is a library that offers a standardized API that simplifies the development of environments with agents and facilitates the application of MARL algorithms.
    We developed \emph{PRAHOM PettingZoo Wrapper}\label{PettingZoo-wrapper}, a tool to help automate the setting up of \emph{PRAHOM} for a given PettingZoo environment.
    It is a \emph{PoC} linking joint-histories with $\mathcal{M}OISE^+$ specifications to provide functions to infer raw organizational specifications or constrain the training.

    \begin{lstlisting}[language=Python, caption=PRAHOM PettingZoo Wrapper basic use, label={lst:wrapper_basic_use}]
    from omarl_experiments import prahom_wrapper
    env=PettingZoo_env.parallel_env(render_mode="human")
    specs_to_hist={"structural_specifications":{"roles":{"follower":{"23":41,"14":[74,0]}}...},"functional_specifications":{"links":{"(leader,follower,aut)":".*14.*?89"}...}...}
    policy_specs_constr={"agent_0":{"structural_specifications":"roles":["follower"]}}
    env=prahom_wrapper(env,action_to_specs,training_specs)
    env.train("default_PPO")
    trained_specs,agent_to_specs=env.prahom_specs()
    \end{lstlisting}

    In \autoref{lst:wrapper_basic_use}, we detailed a basic use of the wrapper to augment a PettingZoo environment (l. 5) with known relations between histories and organizational specifications (l. 3) and the design constraints agents are to satisfy (l. 4).
    During training, \textquote{"agent\_0"} is constrained to role \textquote{follower} so all of its actions must be chosen regarding the relations between organizational specifications and expected histories (or shortened histories expressions).
    After training, \emph{PRAHOM PettingZoo Wrapper} infers organizational specifications from joint-histories in 5 episodes, and the agents' instantiation for each one (l. 7).

    This process first uses known relations between histories and organizational specifications (l. 3): an agent's history that contains the observation $14$ (\textquote{order received}) and the action $74$ (\textquote{apply order}) or $0$ (\textquote{do nothing}), is a \textquote{follower}. Similarly, history can be linked to organizational specifications with regular expressions such as for \emph{links} (l.3).
    Then, it generalizes several joint-histories as new organizational specifications relying on their respective general definition.
    %
    For instance, a role is thought to be inferred by measuring similarity between histories in several ways: sequence clustering (with a dendrogram); K-nearest neighbors (with PCA of histories); statistical analysis (specially action frequency in various visualizations); etc.
    %
    Techniques are also used to infer goals: frequency analysis of common observations of agents with the same role; analysis of threshold states triggering an improvement of the reward (with a state transition graph).

    From the roles and goals obtained, an empiric approach allows inferring the other organizational specifications such as compatibilities, permissions and obligations.
    Due to that empiric approach and the specific scope of the techniques, results may be incomplete or noisy. Yet, since results are compliant with $\mathcal{M}OISE^+$, it is possible to use them in MAS design methods in light of the identified organizational specifications.

